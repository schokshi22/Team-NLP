{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9801,"sourceType":"datasetVersion","datasetId":6763}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Import necessary libraries\nfrom gensim.models import KeyedVectors\nfrom nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\nimport nltk\n\n# Download necessary NLTK data\nnltk.download('punkt')\nnltk.download('stopwords')\n\n# Path to the Google News vectors dataset in Kaggle environment\nmodel_path = '/kaggle/input/googlenewsvectorsnegative300/GoogleNews-vectors-negative300.bin'\n\n# Load the pre-trained Word2Vec model\nmodel = KeyedVectors.load_word2vec_format(model_path, binary=True)\n\n# Test the model - Words most similar \n#if 'sample' in model.key_to_index:\n#    similar_words = model.most_similar('sample')\n#    print(\"Words similar to 'sample':\", similar_words)\n\n# Get the vector for a word\n#if 'sample' in model.key_to_index:\n#    word_vector = model['sample']\n#    print(\"Vector for 'sample':\", word_vector)\n\n# Function to compute similarity between two words\ndef compute_similarity(word1, word2):\n    if word1 in model.key_to_index and word2 in model.key_to_index:\n        similarity = model.similarity(word1, word2)\n        print(f\"Similarity between '{word1}' and '{word2}': {similarity}\")\n    else:\n        missing_words = [word for word in [word1, word2] if word not in model.key_to_index]\n        print(f\"Word(s) not in vocabulary: {', '.join(missing_words)}\")\n\n# Example usage\ncompute_similarity('nanny', 'infant')\ncompute_similarity('king', 'queen')\ncompute_similarity('car', 'bicycle')","metadata":{"execution":{"iopub.status.busy":"2024-05-20T04:55:41.924740Z","iopub.execute_input":"2024-05-20T04:55:41.925182Z","iopub.status.idle":"2024-05-20T04:56:28.508290Z","shell.execute_reply.started":"2024-05-20T04:55:41.925140Z","shell.execute_reply":"2024-05-20T04:56:28.507093Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"[nltk_data] Downloading package punkt to /usr/share/nltk_data...\n[nltk_data]   Package punkt is already up-to-date!\n[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\nSimilarity between 'nanny' and 'infant': 0.34529760479927063\nSimilarity between 'king' and 'queen': 0.6510956883430481\nSimilarity between 'car' and 'bicycle': 0.5364484190940857\n","output_type":"stream"}]}]}